{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileInfo","profile","updateStatus","isOwner","savePhoto","Preloader","className","s","descriptionBlock","src","photos","large","userPhoto","mainPhoto","type","target","files","length","Post","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","console","log","postsElements","posts","reverse","map","p","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","updateRefreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.dc855650.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__WNQSs\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3DES8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1N71F\",\"posts\":\"MyPosts_posts__1CYG-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__B1Egu\"};","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport { setStatus } from '../../../redux/profile-reducer';\r\n\r\n// let arr = [0, () => {}];\r\n// let [a, setA] = arr;\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    // let stateWithSetState = useState(true);\r\n    // let editMode = stateWithSetState[0];\r\n    // let setEditMode = stateWithSetState[1];\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivatseEditMode = () => {\r\n        setEditMode(false); \r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span \r\n                    onDoubleClick={activateEditMode}\r\n                    >\r\n                        {props.status || \"no status\"}\r\n                    </span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        // ref={this.statusInput}\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivatseEditMode}\r\n                        value={status}\r\n\r\n                    ></input>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/Images/user.png';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                <div>{isOwner && <input type={'file'} onChange={onMainPhotoSelected} />}</div>\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://i.ytimg.com/vi/fUWrhetZh9M/maxresdefault.jpg' />\r\n      {props.message} \r\n      <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import React, { Component, PureComponent } from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators.js';\r\nimport { Textarea } from '../../../components/common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name='newPostText'\r\n                    component={Textarea}\r\n                    placeholder={'Post message'}\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\r\n\r\n// window.props = [];\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    // componentDidMount() {\r\n    //     setTimeout(() => {\r\n    //         this.setState({a: 12});\r\n    //     }, 3000)\r\n    // }\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps != this.props || nextState != this.state; \r\n    // }\r\n\r\n    // window.props.push(this.props);\r\n    console.log(\"RENDER 1\");\r\n    // console.log(this.props);\r\n\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;\r\n","import { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts\r\n    , newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n         />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto } from './../../redux/profile-reducer'\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  updateRefreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) { \r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.updateRefreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId != prevProps.match.params.userId  ) {\r\n      this.updateRefreshProfile();}\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  })\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto })\r\n  , withRouter\r\n  // , withAuthRedirect\r\n)\r\n  (ProfileContainer);"],"sourceRoot":""}